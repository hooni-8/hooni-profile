import React, { useState, useEffect } from 'react';

import '@styles/section/Section_3.scss'

export default function Section_3() {
    const [isVisible, setIsVisible] = useState(false);
    const [activeFilter, setActiveFilter] = useState('all');
    const [filteredProjects, setFilteredProjects] = useState([]);

    const projects = [
        {
            id: 1,
            title: "E-commerce ÌîåÎû´Ìèº",
            description: "ReactÏôÄ Node.jsÎ•º ÌôúÏö©Ìïú ÌíÄÏä§ÌÉù ÏáºÌïëÎ™∞ ÏõπÏÇ¨Ïù¥Ìä∏ÏûÖÎãàÎã§. Í≤∞Ï†ú ÏãúÏä§ÌÖúÍ≥º Í¥ÄÎ¶¨Ïûê ÌéòÏù¥ÏßÄÎ•º Ìè¨Ìï®Ìïú ÏôÑÏ†ÑÌïú Ï†ÑÏûêÏÉÅÍ±∞Îûò ÏÜîÎ£®ÏÖòÏûÖÎãàÎã§.",
            category: "fullstack",
            tags: ["React", "Node.js", "MongoDB", "Stripe"],
            image: "üõí",
            githubUrl: "#",
            liveUrl: "#",
            featured: true
        },
        {
            id: 2,
            title: "Ïã§ÏãúÍ∞Ñ Ï±ÑÌåÖ Ïï±",
            description: "Socket.ioÎ•º Ïù¥Ïö©Ìïú Ïã§ÏãúÍ∞Ñ Ï±ÑÌåÖ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖòÏûÖÎãàÎã§. Î∞© ÏÉùÏÑ±, ÌååÏùº Ï†ÑÏÜ°, Ïù¥Î™®ÏßÄ Î∞òÏùë Îì±Ïùò Í∏∞Îä•ÏùÑ Ìè¨Ìï®Ìï©ÎãàÎã§.",
            category: "fullstack",
            tags: ["React", "Socket.io", "Express", "Redis"],
            image: "üí¨",
            githubUrl: "#",
            liveUrl: "#",
            featured: false
        },
        {
            id: 3,
            title: "ÎÇ†Ïî® ÎåÄÏãúÎ≥¥Îìú",
            description: "OpenWeather APIÎ•º ÌôúÏö©Ìïú Î∞òÏùëÌòï ÎÇ†Ïî® Ïï±ÏûÖÎãàÎã§. ÏúÑÏπò Í∏∞Î∞ò ÎÇ†Ïî® Ï†ïÎ≥¥ÏôÄ 7Ïùº ÏòàÎ≥¥Î•º Ï†úÍ≥µÌï©ÎãàÎã§.",
            category: "frontend",
            tags: ["React", "API", "CSS Grid", "Chart.js"],
            image: "üå§Ô∏è",
            githubUrl: "#",
            liveUrl: "#",
            featured: true
        },
        {
            id: 4,
            title: "Task Management API",
            description: "RESTful API ÏÑ§Í≥Ñ ÏõêÏπôÏùÑ Îî∞Î•∏ Ìï† Ïùº Í¥ÄÎ¶¨ Î∞±ÏóîÎìú ÏãúÏä§ÌÖúÏûÖÎãàÎã§. JWT Ïù∏Ï¶ùÍ≥º Ïó≠Ìï† Í∏∞Î∞ò Ï†ëÍ∑º Ï†úÏñ¥Î•º Íµ¨ÌòÑÌñàÏäµÎãàÎã§.",
            category: "backend",
            tags: ["Node.js", "Express", "PostgreSQL", "JWT"],
            image: "üìã",
            githubUrl: "#",
            liveUrl: "#",
            featured: false
        },
        {
            id: 5,
            title: "Ìè¨Ìä∏Ìè¥Î¶¨Ïò§ ÏõπÏÇ¨Ïù¥Ìä∏",
            description: "ÌòÑÏû¨ Î≥¥Í≥† Í≥ÑÏã† Ìè¨Ìä∏Ìè¥Î¶¨Ïò§ ÏõπÏÇ¨Ïù¥Ìä∏ÏûÖÎãàÎã§. Î™®ÎçòÌïú ÎîîÏûêÏù∏Í≥º Î∂ÄÎìúÎü¨Ïö¥ Ïï†ÎãàÎ©îÏù¥ÏÖòÏùÑ Ï†ÅÏö©ÌñàÏäµÎãàÎã§.",
            category: "frontend",
            tags: ["React", "SCSS", "Framer Motion", "Responsive"],
            image: "üé®",
            githubUrl: "#",
            liveUrl: "#",
            featured: true
        },
        {
            id: 6,
            title: "Îç∞Ïù¥ÌÑ∞ Î∂ÑÏÑù ÎèÑÍµ¨",
            description: "PythonÍ≥º DjangoÎ•º ÌôúÏö©Ìïú Îç∞Ïù¥ÌÑ∞ ÏãúÍ∞ÅÌôî Ïõπ Ïï±ÏûÖÎãàÎã§. CSV ÌååÏùº ÏóÖÎ°úÎìúÏôÄ Îã§ÏñëÌïú Ï∞®Ìä∏ ÏÉùÏÑ±Ïù¥ Í∞ÄÎä•Ìï©ÎãàÎã§.",
            category: "fullstack",
            tags: ["Python", "Django", "D3.js", "Pandas"],
            image: "üìä",
            githubUrl: "#",
            liveUrl: "#",
            featured: false
        }
    ];

    const categories = [
        { id: 'all', name: 'Ï†ÑÏ≤¥', count: projects.length },
        { id: 'fullstack', name: 'ÌíÄÏä§ÌÉù', count: projects.filter(p => p.category === 'fullstack').length },
        { id: 'frontend', name: 'ÌîÑÎ°†Ìä∏ÏóîÎìú', count: projects.filter(p => p.category === 'frontend').length },
        { id: 'backend', name: 'Î∞±ÏóîÎìú', count: projects.filter(p => p.category === 'backend').length }
    ];

    useEffect(() => {
        setIsVisible(true);

        const observer = new IntersectionObserver(
            ([entry]) => {
                if (entry.isIntersecting) {
                    setIsVisible(true);
                }
            },
            { threshold: 0.1 }
        );

        const section = document.getElementById('projects');
        if (section) {
            observer.observe(section);
        }

        return () => observer.disconnect();
    }, []);

    useEffect(() => {
        if (activeFilter === 'all') {
            setFilteredProjects(projects);
        } else {
            setFilteredProjects(projects.filter(project => project.category === activeFilter));
        }
    }, [activeFilter]);

    const handleFilterChange = (categoryId) => {
        setActiveFilter(categoryId);
    };

    const featuredProjects = projects.filter(project => project.featured);

    return (
        <section id="projects" className={`projects-section ${isVisible ? 'visible' : ''}`}>
            <div className="projects-container">
                <div className="section-header">
                    <h2 className="section-title">Projects</h2>
                    <p className="section-subtitle">Ï†úÍ∞Ä ÎßåÎì† ÌîÑÎ°úÏ†ùÌä∏Îì§ÏùÑ ÏÜåÍ∞úÌï©ÎãàÎã§</p>
                </div>

                {/* Featured Projects */}
                <div className="featured-section">
                    <h3 className="featured-title">Ï£ºÏöî ÌîÑÎ°úÏ†ùÌä∏</h3>
                    <div className="featured-grid">
                        {featuredProjects.map((project, index) => (
                            <div key={project.id} className={`featured-card ${isVisible ? 'animate' : ''}`}
                                 style={{animationDelay: `${index * 0.2}s`}}>
                                <div className="project-image">
                                    <div className="image-placeholder">
                                        <span className="project-emoji">{project.image}</span>
                                    </div>
                                    <div className="project-overlay">
                                        <div className="project-links">
                                            <a href={project.githubUrl} className="project-link" aria-label="GitHub">
                                                <span>üì±</span>
                                            </a>
                                            <a href={project.liveUrl} className="project-link" aria-label="Live Demo">
                                                <span>üåê</span>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div className="project-content">
                                    <h4 className="project-title">{project.title}</h4>
                                    <p className="project-description">{project.description}</p>
                                    <div className="project-tags">
                                        {project.tags.map((tag, tagIndex) => (
                                            <span key={tagIndex} className="project-tag">{tag}</span>
                                        ))}
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>

                {/* All Projects */}
                <div className="all-projects-section">
                    <h3 className="section-subtitle-large">Î™®Îì† ÌîÑÎ°úÏ†ùÌä∏</h3>

                    {/* Filter Buttons */}
                    <div className="filter-container">
                        {categories.map((category) => (
                            <button
                                key={category.id}
                                className={`filter-btn ${activeFilter === category.id ? 'active' : ''}`}
                                onClick={() => handleFilterChange(category.id)}
                            >
                                {category.name}
                                <span className="filter-count">({category.count})</span>
                            </button>
                        ))}
                    </div>

                    {/* Projects Grid */}
                    <div className="projects-grid">
                        {filteredProjects.map((project, index) => (
                            <div key={project.id} className={`project-card ${isVisible ? 'animate' : ''}`}
                                 style={{animationDelay: `${index * 0.1}s`}}>
                                <div className="card-header">
                                    <div className="project-emoji">{project.image}</div>
                                    <div className="project-category">{project.category}</div>
                                </div>
                                <div className="card-body">
                                    <h4 className="project-title">{project.title}</h4>
                                    <p className="project-description">{project.description}</p>
                                    <div className="project-tags">
                                        {project.tags.map((tag, tagIndex) => (
                                            <span key={tagIndex} className="project-tag">{tag}</span>
                                        ))}
                                    </div>
                                </div>
                                <div className="card-footer">
                                    <a href={project.githubUrl} className="project-btn secondary">
                                        <span>üì±</span> Code
                                    </a>
                                    <a href={project.liveUrl} className="project-btn primary">
                                        <span>üåê</span> Demo
                                    </a>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>

                {/* Call to Action */}
                <div className="cta-section">
                    <div className="cta-content">
                        <h3>Îçî ÎßéÏùÄ ÌîÑÎ°úÏ†ùÌä∏Í∞Ä Í∂ÅÍ∏àÌïòÏã†Í∞ÄÏöî?</h3>
                        <p>GitHubÏóêÏÑú Îçî ÎßéÏùÄ ÌîÑÎ°úÏ†ùÌä∏ÏôÄ ÏΩîÎìúÎ•º ÌôïÏù∏ÌïòÏã§ Ïàò ÏûàÏäµÎãàÎã§.</p>
                        <a href="#" className="cta-btn">
                            <span>üì±</span>
                            GitHub Î∞©Î¨∏ÌïòÍ∏∞
                        </a>
                    </div>
                </div>
            </div>
        </section>
    );
}